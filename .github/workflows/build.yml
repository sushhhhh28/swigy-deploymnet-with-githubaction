name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=Swiggy
            -Dsonar.projectName=swiggy
            -Dsonar.sources=.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Docker build and push to ECR
        run: |
          # Authenticate Docker to ECR
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 355628581932.dkr.ecr.us-east-1.amazonaws.com

          # Build Docker image
          docker build -t swiggy-repo -f swigy-deploymnet-with-githubaction/deployment-using-github-actions/Dockerfile swigy-deploymnet-with-githubaction/deployment-using-github-actions/

          # Tag the image for ECR
          docker tag swiggy-repo:latest 355628581932.dkr.ecr.us-east-1.amazonaws.com/swiggy-repo:latest

          # Push the image to ECR
          docker push 355628581932.dkr.ecr.us-east-1.amazonaws.com/swiggy-repo:latest
    env:
      DOCKER_CLI_ACI: 1
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
